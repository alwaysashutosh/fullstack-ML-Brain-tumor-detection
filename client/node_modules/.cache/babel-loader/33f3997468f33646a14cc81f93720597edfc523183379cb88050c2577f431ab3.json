{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashut\\\\OneDrive\\\\Desktop\\\\ML-based Brain Tumor_Detection\\\\Brain-Tumor-Detection--OG\\\\Brain-Tumor-Detection\\\\client\\\\src\\\\Components\\\\ResultCard.jsx\";\nimport { prepareCssVars } from '@mui/system';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    height: 150px;\n    background: rgba(17, 34, 64, 0.5);\n    border-radius: 10px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\n    padding: 12px;\n    display: flex;\n    gap: 14px;\n    flex-direction: row;\n    @media (max-width: 430px) {\n        flex-direction: column;\n        height: fit-content;\n    }\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    &:hover {\n        transform: scale(1.02);\n    }\n`;\n_c = Container;\nconst Image = styled.img`\n    height: 100%;\n    @media (max-width: 430px) {\n      height: 100%\n    }\n    object-fit: cover;\n    border: 3px solid ${_ref => {\n  let {\n    prediction\n  } = _ref;\n  return prediction ? '#FF4D4D' : '#64ffda';\n}};\n    border-radius: 12px;\n    box-shadow: 0 0 10px ${_ref2 => {\n  let {\n    prediction\n  } = _ref2;\n  return prediction ? 'rgba(255, 77, 77, 0.3)' : 'rgba(100, 255, 218, 0.3)';\n}};\n`;\n_c2 = Image;\nconst Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    width: 100%;\n`;\n_c3 = Body;\nconst Title = styled.div`\n    font-size: 20px;\n    font-weight: 500;\n    color: ${_ref3 => {\n  let {\n    prediction\n  } = _ref3;\n  return prediction ? '#FF4D4D' : '#64ffda';\n}};\n`;\n_c4 = Title;\nconst Description = styled.div`\n    font-size: 15px;\n    font-weight: 400;\n    color: #8892b0;\n`;\n_c5 = Description;\nconst File = styled.div`\n    font-size: 15px;\n    font-weight: 400;\n    color: #8892b0;\n`;\n_c6 = File;\nconst Probablity = styled.div`\n    font-size: 17px;\n    font-weight: 600;\n    margin-top: 10px;\n    color: ${_ref4 => {\n  let {\n    prediction\n  } = _ref4;\n  return prediction ? '#FF4D4D' : '#64ffda';\n}};\n`;\n_c7 = Probablity;\nconst ResultCard = _ref5 => {\n  let {\n    image,\n    prediction\n  } = _ref5;\n  var probablity = prediction * 100;\n  if (probablity > 50) {\n    prediction = 1;\n  } else if (probablity < 50) {\n    prediction = 0;\n    probablity = 100.000 - probablity;\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      prediction: prediction,\n      src: image.base64_file,\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        prediction: prediction,\n        children: prediction ? \"Tumor Detected\" : \"No Tumor Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: prediction ? \"According to our prediction on basis of our ML model there is a possibility on tumor detected in the image.\" : \"According to our prediction on basis of our ML model there is a possibility on no tumor detected in the image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(File, {\n        children: [\"File: \", image.file_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Probablity, {\n        prediction: prediction,\n        children: [\"Accuracy: \", Math.round(probablity * 100) / 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_c8 = ResultCard;\nexport default ResultCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Description\");\n$RefreshReg$(_c6, \"File\");\n$RefreshReg$(_c7, \"Probablity\");\n$RefreshReg$(_c8, \"ResultCard\");","map":{"version":3,"names":["prepareCssVars","React","styled","useTheme","jsxDEV","_jsxDEV","Container","div","_c","Image","img","_ref","prediction","_ref2","_c2","Body","_c3","Title","_ref3","_c4","Description","_c5","File","_c6","Probablity","_ref4","_c7","ResultCard","_ref5","image","probablity","children","src","base64_file","alt","fileName","_jsxFileName","lineNumber","columnNumber","file_name","Math","round","_c8","$RefreshReg$"],"sources":["C:/Users/ashut/OneDrive/Desktop/ML-based Brain Tumor_Detection/Brain-Tumor-Detection--OG/Brain-Tumor-Detection/client/src/Components/ResultCard.jsx"],"sourcesContent":["import { prepareCssVars } from '@mui/system';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { useTheme } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 150px;\r\n    background: rgba(17, 34, 64, 0.5);\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n    padding: 12px;\r\n    display: flex;\r\n    gap: 14px;\r\n    flex-direction: row;\r\n    @media (max-width: 430px) {\r\n        flex-direction: column;\r\n        height: fit-content;\r\n    }\r\n    cursor: pointer;\r\n    transition: all 0.3s ease-in-out;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n`\r\nconst Image = styled.img`\r\n    height: 100%;\r\n    @media (max-width: 430px) {\r\n      height: 100%\r\n    }\r\n    object-fit: cover;\r\n    border: 3px solid ${({ prediction }) => prediction ? '#FF4D4D' : '#64ffda'};\r\n    border-radius: 12px;\r\n    box-shadow: 0 0 10px ${({ prediction }) => prediction ? 'rgba(255, 77, 77, 0.3)' : 'rgba(100, 255, 218, 0.3)'};\r\n`\r\nconst Body = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 6px;\r\n    width: 100%;\r\n`\r\nconst Title = styled.div`\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: ${({ prediction }) => prediction ? '#FF4D4D' : '#64ffda'};\r\n`\r\n\r\nconst Description = styled.div`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    color: #8892b0;\r\n`\r\nconst File = styled.div`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    color: #8892b0;\r\n`\r\nconst Probablity = styled.div`\r\n    font-size: 17px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    color: ${({ prediction }) => prediction ? '#FF4D4D' : '#64ffda'};\r\n`;\r\n\r\n\r\nconst ResultCard = ({image,prediction}) => {\r\n    var probablity = prediction*100\r\n    if(probablity>50){\r\n        prediction = 1\r\n    }\r\n    else if(probablity<50){\r\n        prediction = 0\r\n        probablity = 100.000 - probablity\r\n    }\r\n    return (\r\n        <Container>\r\n            <Image prediction={prediction} src={image.base64_file} alt=\"image\" />\r\n            <Body>\r\n                <Title prediction={prediction}>{prediction ? \"Tumor Detected\" : \"No Tumor Detected\"}</Title>\r\n                <Description>\r\n                    {prediction \r\n                        ? \"According to our prediction on basis of our ML model there is a possibility on tumor detected in the image.\"\r\n                        : \"According to our prediction on basis of our ML model there is a possibility on no tumor detected in the image.\"\r\n                    }\r\n                </Description>\r\n                <File>File: {image.file_name}</File>\r\n                <Probablity prediction={prediction}>Accuracy: {Math.round(probablity*100)/100}%</Probablity>\r\n            </Body>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ResultCard"],"mappings":";AAAA,SAASA,cAAc,QAAQ,aAAa;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GAlBKF,SAAS;AAmBf,MAAMG,KAAK,GAAGP,MAAM,CAACQ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,wBAAwBC,IAAA;EAAA,IAAC;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAAA,OAAKC,UAAU,GAAG,SAAS,GAAG,SAAS;AAAA,CAAC;AAC/E;AACA,2BAA2BC,KAAA;EAAA,IAAC;IAAED;EAAW,CAAC,GAAAC,KAAA;EAAA,OAAKD,UAAU,GAAG,wBAAwB,GAAG,0BAA0B;AAAA,CAAC;AAClH,CAAC;AAAAE,GAAA,GATKL,KAAK;AAUX,MAAMM,IAAI,GAAGb,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA;AACA,CAAC;AAAAS,GAAA,GALKD,IAAI;AAMV,MAAME,KAAK,GAAGf,MAAM,CAACK,GAAI;AACzB;AACA;AACA,aAAaW,KAAA;EAAA,IAAC;IAAEN;EAAW,CAAC,GAAAM,KAAA;EAAA,OAAKN,UAAU,GAAG,SAAS,GAAG,SAAS;AAAA,CAAC;AACpE,CAAC;AAAAO,GAAA,GAJKF,KAAK;AAMX,MAAMG,WAAW,GAAGlB,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA,CAAC;AAAAc,GAAA,GAJKD,WAAW;AAKjB,MAAME,IAAI,GAAGpB,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA,CAAC;AAAAgB,GAAA,GAJKD,IAAI;AAKV,MAAME,UAAU,GAAGtB,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA,aAAakB,KAAA;EAAA,IAAC;IAAEb;EAAW,CAAC,GAAAa,KAAA;EAAA,OAAKb,UAAU,GAAG,SAAS,GAAG,SAAS;AAAA,CAAC;AACpE,CAAC;AAACc,GAAA,GALIF,UAAU;AAQhB,MAAMG,UAAU,GAAGC,KAAA,IAAwB;EAAA,IAAvB;IAACC,KAAK;IAACjB;EAAU,CAAC,GAAAgB,KAAA;EAClC,IAAIE,UAAU,GAAGlB,UAAU,GAAC,GAAG;EAC/B,IAAGkB,UAAU,GAAC,EAAE,EAAC;IACblB,UAAU,GAAG,CAAC;EAClB,CAAC,MACI,IAAGkB,UAAU,GAAC,EAAE,EAAC;IAClBlB,UAAU,GAAG,CAAC;IACdkB,UAAU,GAAG,OAAO,GAAGA,UAAU;EACrC;EACA,oBACIzB,OAAA,CAACC,SAAS;IAAAyB,QAAA,gBACN1B,OAAA,CAACI,KAAK;MAACG,UAAU,EAAEA,UAAW;MAACoB,GAAG,EAAEH,KAAK,CAACI,WAAY;MAACC,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrEjC,OAAA,CAACU,IAAI;MAAAgB,QAAA,gBACD1B,OAAA,CAACY,KAAK;QAACL,UAAU,EAAEA,UAAW;QAAAmB,QAAA,EAAEnB,UAAU,GAAG,gBAAgB,GAAG;MAAmB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC5FjC,OAAA,CAACe,WAAW;QAAAW,QAAA,EACPnB,UAAU,GACL,6GAA6G,GAC7G;MAAgH;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE5G,eACdjC,OAAA,CAACiB,IAAI;QAAAS,QAAA,GAAC,QAAM,EAACF,KAAK,CAACU,SAAS;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpCjC,OAAA,CAACmB,UAAU;QAACZ,UAAU,EAAEA,UAAW;QAAAmB,QAAA,GAAC,YAAU,EAACS,IAAI,CAACC,KAAK,CAACX,UAAU,GAAC,GAAG,CAAC,GAAC,GAAG,EAAC,GAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEpB,CAAC;AAAAI,GAAA,GAzBKf,UAAU;AA2BhB,eAAeA,UAAU;AAAA,IAAAnB,EAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}