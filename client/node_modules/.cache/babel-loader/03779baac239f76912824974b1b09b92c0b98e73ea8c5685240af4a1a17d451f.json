{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashut\\\\OneDrive\\\\Desktop\\\\ML-based Brain Tumor_Detection\\\\Brain-Tumor-Detection\\\\client\\\\src\\\\Components\\\\ResultCard.jsx\";\nimport { prepareCssVars } from '@mui/system';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTheme } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    height: 150px;\n    background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.card;\n}};\n    border-radius: 10px;\n    box-shadow: 0 0 10px 0 #0000001a;\n    padding: 12px;\n    display: flex;\n    gap: 14px;\n    flex-direction: row;\n    @media (max-width: 430px) {\n        flex-direction: column;\n        height: fit-content;\n    }\n    cursor: pointer;\n    transition: all 0.3s ease-in-out;\n    &:hover {\n        transform: scale(1.02);\n    }\n`;\n_c = Container;\nconst Image = styled.img`\n    height: 100%;\n    @media (max-width: 430px) {\n      height: 100%\n    }\n    object-fit: cover;\n    ${_ref2 => {\n  let {\n    theme,\n    prediction\n  } = _ref2;\n  return prediction ? `border: 1px solid ${theme.green}` : `border: 1px solid ${theme.pink}`;\n}};\n    ;\n    border-radius: 12px;\n`;\n_c2 = Image;\nconst Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n    width: 100%;\n`;\n_c3 = Body;\nconst Title = styled.div`\n    font-size: 20px;\n    font-weight: 500;\n    ${_ref3 => {\n  let {\n    theme,\n    prediction\n  } = _ref3;\n  return prediction ? `color: ${theme.green + 'dd'}` : `color: ${theme.pink + 'dd'}`;\n}};\n`;\n_c4 = Title;\nconst Description = styled.div`\n    font-size: 15px;\n    font-weight: 400;\n    ${_ref4 => {\n  let {\n    theme,\n    prediction\n  } = _ref4;\n  return prediction ? `color: ${theme.green + 'aa'}` : `color: ${theme.pink + 'aa'}`;\n}};\n`;\n_c5 = Description;\nconst File = styled.div`\n    font-size: 15px;\n    font-weight: 400;\n    color: ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.text;\n}};\n`;\n_c6 = File;\nconst Probablity = styled.div`\n    font-size: 17px;\n    font-weight: 600;\n    margin-top: 10px;\n    ${_ref6 => {\n  let {\n    theme,\n    prediction\n  } = _ref6;\n  return prediction ? `color: ${theme.green + 'ee'}` : `color: ${theme.pink + 'ee'}`;\n}};\n`;\n_c7 = Probablity;\nconst ResultCard = _ref7 => {\n  let {\n    image,\n    prediction\n  } = _ref7;\n  var probablity = prediction * 100;\n  if (probablity > 50) {\n    prediction = 1;\n  } else if (probablity < 50) {\n    prediction = 0;\n    probablity = 100.000 - probablity;\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      prediction: !prediction,\n      src: image.base64_file,\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        prediction: !prediction,\n        children: !prediction ? \"No Tumor Detected\" : \"Tumor Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        prediction: !prediction,\n        children: !prediction ? \"According to our prediction on basis of our ML model there is a possibility on no tumor detected in the image.\" : \"According to our prediction on basis of our ML model there is a possibility on tumor detected in the image.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(File, {\n        children: [\"File: \", image.file_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Probablity, {\n        prediction: !prediction,\n        children: [\"Accuracy: \", Math.round(probablity * 100) / 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_c8 = ResultCard;\nexport default ResultCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Body\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Description\");\n$RefreshReg$(_c6, \"File\");\n$RefreshReg$(_c7, \"Probablity\");\n$RefreshReg$(_c8, \"ResultCard\");","map":{"version":3,"names":["prepareCssVars","React","styled","useTheme","jsxDEV","_jsxDEV","Container","div","_ref","theme","card","_c","Image","img","_ref2","prediction","green","pink","_c2","Body","_c3","Title","_ref3","_c4","Description","_ref4","_c5","File","_ref5","text","_c6","Probablity","_ref6","_c7","ResultCard","_ref7","image","probablity","children","src","base64_file","alt","fileName","_jsxFileName","lineNumber","columnNumber","file_name","Math","round","_c8","$RefreshReg$"],"sources":["C:/Users/ashut/OneDrive/Desktop/ML-based Brain Tumor_Detection/Brain-Tumor-Detection/client/src/Components/ResultCard.jsx"],"sourcesContent":["import { prepareCssVars } from '@mui/system';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { useTheme } from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 150px;\r\n    background-color: ${({ theme }) => theme.card};\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px 0 #0000001a;\r\n    padding: 12px;\r\n    display: flex;\r\n    gap: 14px;\r\n    flex-direction: row;\r\n    @media (max-width: 430px) {\r\n        flex-direction: column;\r\n        height: fit-content;\r\n    }\r\n    cursor: pointer;\r\n    transition: all 0.3s ease-in-out;\r\n    &:hover {\r\n        transform: scale(1.02);\r\n    }\r\n`\r\nconst Image = styled.img`\r\n    height: 100%;\r\n    @media (max-width: 430px) {\r\n      height: 100%\r\n    }\r\n    object-fit: cover;\r\n    ${({ theme, prediction }) =>  prediction ? `border: 1px solid ${theme.green}` : `border: 1px solid ${theme.pink}` };\r\n    ;\r\n    border-radius: 12px;\r\n`\r\nconst Body = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 6px;\r\n    width: 100%;\r\n`\r\nconst Title = styled.div`\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    ${({ theme, prediction }) =>  prediction ? `color: ${theme.green+'dd'}` : `color: ${theme.pink+'dd'}` };\r\n`\r\n\r\nconst Description = styled.div`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    ${({ theme, prediction }) =>  prediction ? `color: ${theme.green+'aa'}` : `color: ${theme.pink+'aa'}` };\r\n`\r\nconst File = styled.div`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text};\r\n`\r\nconst Probablity = styled.div`\r\n    font-size: 17px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    ${({ theme, prediction }) =>  prediction ? `color: ${theme.green+'ee'}` : `color: ${theme.pink+'ee'}` };\r\n`;\r\n\r\n\r\nconst ResultCard = ({image,prediction}) => {\r\n    var probablity = prediction*100\r\n    if(probablity>50){\r\n        prediction = 1\r\n    }\r\n    else if(probablity<50){\r\n        prediction = 0\r\n        probablity = 100.000 - probablity\r\n    }\r\n    return (\r\n        <Container>\r\n            <Image prediction={!prediction} src={image.base64_file} alt=\"image\" />\r\n            <Body>\r\n                <Title prediction={!prediction}>{!prediction ? \"No Tumor Detected\" : \"Tumor Detected\"}</Title>\r\n                <Description  prediction={!prediction}>{!prediction ? \"According to our prediction on basis of our ML model there is a possibility on no tumor detected in the image.\": \"According to our prediction on basis of our ML model there is a possibility on tumor detected in the image.\" }</Description>\r\n                <File>File: {image.file_name}</File>\r\n                <Probablity  prediction={!prediction}>Accuracy: {Math.round(probablity*100)/100}%</Probablity>\r\n            </Body>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ResultCard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}